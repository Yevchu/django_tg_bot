import logging
from telegram import Update
from telegram.ext import ContextTypes
from bot_app.services.message_service import MessageService, ScheduledMessage
from io import BytesIO

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥–µ—Ä–∞
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO  # –£–≤—ñ–º–∫–Ω–µ–º–æ DEBUG-—Ä–µ–∂–∏–º
)

# –õ–æ–≥—É–≤–∞–Ω–Ω—è –≤—Å—ñ—Ö –±—ñ–±–ª—ñ–æ—Ç–µ–∫
logging.getLogger("telegram").setLevel(logging.DEBUG)
logging.getLogger("telegram.ext").setLevel(logging.DEBUG)
logging.getLogger("asyncio").setLevel(logging.DEBUG)
logging.getLogger("django.db").setLevel(logging.DEBUG)  # –õ–æ–≥—É–≤–∞–Ω–Ω—è Django ORM

logger = logging.getLogger(__name__)  # –û—Å–Ω–æ–≤–Ω–∏–π –ª–æ–≥–µ—Ä

async def get_pending_messages() -> list[ScheduledMessage]:
    logger.info('Getting pending messages')
    return await MessageService.get_pending_messages()

async def check_pending_messages(context: ContextTypes.DEFAULT_TYPE) -> None:
    logger.debug("üîç [check_pending_messages] –ó–∞–ø—É—â–µ–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å...")

    messages = await get_pending_messages()
    logger.debug(f"üì© [check_pending_messages] –û—Ç—Ä–∏–º–∞–Ω–æ {len(messages)} –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å")

    if messages:
        for message in messages:
            try:
                logger.debug(f"üìù [check_pending_messages] –û–±—Ä–æ–±–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è {message.id} –¥–ª—è –≥—Ä—É–ø–∏ {message.group.group_id}")

                if message.image:
                    logger.debug(f"üñº [check_pending_messages] –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —É {message.group.group_name}")
                    image_stream = BytesIO(bytes(message.image))
                    image_stream.name = 'photo.jpg'
                    
                    await context.bot.send_photo(
                        chat_id=message.group.group_id,
                        photo=image_stream,
                        caption=message.message_text
                    )
                else:
                    logger.debug(f"üí¨ [check_pending_messages] –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ç–µ–∫—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É {message.group.group_name}")
                    await context.bot.send_message(
                        chat_id=message.group.group_id,
                        text=message.message_text
                    )

                logger.debug(f"‚úÖ [check_pending_messages] –ü–æ–∑–Ω–∞—á–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è {message.id} —è–∫ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–µ")
                await MessageService.mark_as_send(message)

            except Exception as e:
                logger.error(f"‚ùå [check_pending_messages] –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è {message.id}: {e}", exc_info=True)

